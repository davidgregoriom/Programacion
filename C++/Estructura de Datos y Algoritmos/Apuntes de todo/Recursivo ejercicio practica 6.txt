#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int BusquedaBinariaIterativa(const std::vector<int>& v, int valorAbuscar)
{
    int primero{0}, ultimo=v.size()-1;
    int medio = (primero+ultimo)/2;
    
    while (primero<=ultimo) {
        if (v.at(medio)<valorAbuscar) {
           primero=medio+1;
        }
        else if(v.at(medio)>valorAbuscar) {
           ultimo = medio - 1;
        }
        else {//son iguales => Encontrado
           return medio;
        }
        medio = (primero+ultimo)/2;
    }
    
    // Not found
    return -1;
}

int main()
{
    std::vector<int> miVec{4,2,7,9,1,3,500,-123,0};
    //Para implmentar la búsqueda binaria el vector tiene que estar ordenado
    std::sort(miVec.begin(), miVec.end());
    //Despues de ejecutar std::sort MiVec quedará ordenado de menor a mayor
    
    int IndiceBusqueda = BusquedaBinariaIterativa(miVec, 500);
    if(IndiceBusqueda == -1) {
        std::cout << "Valor no encontrado" << std::endl;
    }
    else {
        std::cout << "El valor esta en la posicion: " << IndiceBusqueda<<std::endl;
    }
    return 0;
    
}








int BusquedaBinariaRecursiva(const std::vector<int>& v, int valorAbuscar, int primero, int ultimo) { 
    if (primero > ultimo) { // Caso base
        return -1;
    }

    int medio = (primero+ultimo)/2;
    
    if (v.at(medio) < valorAbuscar) {
        return BusquedaBinariaRecursiva(v, valorAbuscar, medio+1, ultimo);
    }
    else if(v.at(medio) > valorAbuscar) {
        return BusquedaBinariaRecursiva(v, valorAbuscar, primero, medio-1);
    }
    else { //son iguales => Encontrado
        return medio;
    }
}

int main()
{
    std::vector<int> miVec{4,2,7,9,1,3,500,-123,0};
    //Para implmentar la búsqueda binaria el vector tiene que estar ordenado
    std::sort(miVec.begin(), miVec.end());

    int IndiceBusqueda = BusquedaBinariaRecursiva(miVec, 5, 0, miVec.size()-1);
    if(IndiceBusqueda == -1) {
        std::cout << "Valor no encontrado" << std::endl;
    }
    else {
        std::cout << "El valor esta en la posicion: " << IndiceBusqueda<<std::endl;
    }
    return 0;
}
